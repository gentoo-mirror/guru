<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
    <maintainer type="person">
        <name>Julien Roy</name>
        <email>julien@jroy.ca</email>
    </maintainer>
    <longdescription>
Eventlet is a concurrent networking library for Python that allows you to change how you run your code, not how you write it.

It uses epoll or libevent for highly scalable non-blocking I/O. Coroutines ensure that the developer uses a blocking style of programming that is similar to threading, but provide the benefits of non-blocking I/O. The event dispatch is implicit, which means you can easily use Eventlet from the Python interpreter, or as a small part of a larger application.

It's easy to get started using Eventlet, and easy to convert existing applications to use it. Start off by looking at the examples, common design patterns, and the list of basic API primitives.
    </longdescription>
    <upstream>
        <changelog>https://github.com/eventlet/eventlet/blob/master/NEWS</changelog>
        <doc>http://eventlet.net/doc</doc>
        <bugs-to>https://github.com/eventlet/eventlet/issues</bugs-to>
        <remote-id type="github">eventlet/eventlet</remote-id>
        <remote-id type="pypi">eventlet</remote-id>
    </upstream>
</pkgmetadata>
