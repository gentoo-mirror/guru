diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8896fe0..f2a09e2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -216,7 +215,7 @@ find_package(ZLIB 1.2 REQUIRED)
 find_package(zstd 1.5 REQUIRED)
 
 if (NOT YUZU_USE_EXTERNAL_VULKAN_HEADERS)
-    find_package(Vulkan 1.3.238 REQUIRED)
+    find_package(Vulkan 1.3.236 REQUIRED)
 endif()
 
 if (ENABLE_LIBUSB)
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index 8532fd7..67bed9a 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -29,13 +29,7 @@ endif()
 add_subdirectory(glad)
 
 # inih
-if (NOT TARGET inih::INIReader)
-    add_subdirectory(inih)
-endif()
 
-# mbedtls
-add_subdirectory(mbedtls EXCLUDE_FROM_ALL)
-target_include_directories(mbedtls PUBLIC ./mbedtls/include)
 
 # MicroProfile
 add_library(microprofile INTERFACE)
@@ -77,18 +71,8 @@ if (YUZU_USE_EXTERNAL_SDL2)
 endif()
 
 # ENet
-if (NOT TARGET enet::enet)
-    add_subdirectory(enet EXCLUDE_FROM_ALL)
-    target_include_directories(enet INTERFACE ./enet/include)
-    add_library(enet::enet ALIAS enet)
-endif()
 
 # Cubeb
-if (ENABLE_CUBEB AND NOT TARGET cubeb::cubeb)
-    set(BUILD_TESTS OFF)
-    add_subdirectory(cubeb EXCLUDE_FROM_ALL)
-    add_library(cubeb::cubeb ALIAS cubeb)
-endif()
 
 # DiscordRPC
 if (USE_DISCORD_PRESENCE AND NOT TARGET DiscordRPC::discord-rpc)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index c7283e8..123a745 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -101,11 +101,6 @@ if (MSVC)
     set(CMAKE_EXE_LINKER_FLAGS_RELEASE "/DEBUG /MANIFEST:NO /INCREMENTAL:NO /OPT:REF,ICF" CACHE STRING "" FORCE)
 else()
     add_compile_options(
-        -Werror=all
-        -Werror=extra
-        -Werror=missing-declarations
-        -Werror=shadow
-        -Werror=unused
 
         -Wno-attributes
         -Wno-invalid-offsetof
diff --git a/src/common/CMakeLists.txt b/src/common/CMakeLists.txt
index 9884a4a..46df96b 100644
--- a/src/common/CMakeLists.txt
+++ b/src/common/CMakeLists.txt
@@ -177,7 +177,7 @@ endif()
 create_target_directory_groups(common)
 
 target_link_libraries(common PUBLIC ${Boost_LIBRARIES} fmt::fmt microprofile Threads::Threads)
-target_link_libraries(common PRIVATE lz4::lz4 zstd::zstd LLVM::Demangle)
+target_link_libraries(common PRIVATE lz4 zstd::zstd LLVM::Demangle)
 
 if (YUZU_USE_PRECOMPILED_HEADERS)
     target_precompile_headers(common PRIVATE precompiled_headers.h)
diff --git a/src/common/scm_rev.cpp.in b/src/common/scm_rev.cpp.in
index f0c124d..739c4a6 100644
--- a/src/common/scm_rev.cpp.in
+++ b/src/common/scm_rev.cpp.in
@@ -3,9 +3,9 @@
 
 #include "common/scm_rev.h"
 
-#define GIT_REV      "@GIT_REV@"
-#define GIT_BRANCH   "@GIT_BRANCH@"
-#define GIT_DESC     "@GIT_DESC@"
+#define GIT_REV      "d5f6201"
+#define GIT_BRANCH   "master"
+#define GIT_DESC     "d5f6201"
 #define BUILD_NAME   "@REPO_NAME@"
 #define BUILD_DATE   "@BUILD_DATE@"
 #define BUILD_FULLNAME "@BUILD_FULLNAME@"
diff --git a/src/dedicated_room/CMakeLists.txt b/src/dedicated_room/CMakeLists.txt
index 136109a..6a6924c 100644
--- a/src/dedicated_room/CMakeLists.txt
+++ b/src/dedicated_room/CMakeLists.txt
@@ -15,7 +15,7 @@ if (ENABLE_WEB_SERVICE)
     target_link_libraries(yuzu-room PRIVATE web_service)
 endif()
 
-target_link_libraries(yuzu-room PRIVATE mbedtls mbedcrypto)
+target_link_libraries(yuzu-room PRIVATE mbedtls mbedcrypto mbedx509 mbedcrypto)
 if (MSVC)
     target_link_libraries(yuzu-room PRIVATE getopt)
 endif()
diff --git a/src/network/network.cpp b/src/network/network.cpp
index 6652a18..8513d52 100644
--- a/src/network/network.cpp
+++ b/src/network/network.cpp
@@ -3,7 +3,7 @@
 
 #include "common/assert.h"
 #include "common/logging/log.h"
-#include "enet/enet.h"
+#include <enet/enet.h>
 #include "network/network.h"
 
 namespace Network {
diff --git a/src/video_core/vulkan_common/vulkan_wrapper.cpp b/src/video_core/vulkan_common/vulkan_wrapper.cpp
index 486d4df..abad557 100644
--- a/src/video_core/vulkan_common/vulkan_wrapper.cpp
+++ b/src/video_core/vulkan_common/vulkan_wrapper.cpp
@@ -337,18 +337,6 @@ const char* ToString(VkResult result) noexcept {
         return "VK_ERROR_VALIDATION_FAILED_EXT";
     case VkResult::VK_ERROR_INVALID_SHADER_NV:
         return "VK_ERROR_INVALID_SHADER_NV";
-    case VkResult::VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR:
-        return "VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR";
-    case VkResult::VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR:
-        return "VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR";
-    case VkResult::VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR:
-        return "VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR";
-    case VkResult::VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR:
-        return "VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR";
-    case VkResult::VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR:
-        return "VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR";
-    case VkResult::VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR:
-        return "VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR";
     case VkResult::VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT:
         return "VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT";
     case VkResult::VK_ERROR_FRAGMENTATION_EXT:
diff --git a/src/yuzu_cmd/CMakeLists.txt b/src/yuzu_cmd/CMakeLists.txt
index 46eddf4..afbe9ff 100644
--- a/src/yuzu_cmd/CMakeLists.txt
+++ b/src/yuzu_cmd/CMakeLists.txt
@@ -1,4 +1,6 @@
 # SPDX-FileCopyrightText: 2018 yuzu Emulator Project
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(INIH REQUIRED INIReader)
 # SPDX-License-Identifier: GPL-2.0-or-later
 
 # Credits to Samantas5855 and others for this function.
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index 3eee1cf..8775f79 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -808,7 +808,7 @@ endif()
 create_target_directory_groups(core)
 
 target_link_libraries(core PUBLIC common PRIVATE audio_core network video_core)
-target_link_libraries(core PUBLIC Boost::boost PRIVATE fmt::fmt nlohmann_json::nlohmann_json mbedtls Opus::opus)
+target_link_libraries(core PUBLIC Boost::boost PRIVATE fmt::fmt nlohmann_json::nlohmann_json mbedtls mbedcrypto mbedx509 Opus::opus)
 if (MINGW)
     target_link_libraries(core PRIVATE ${MSWSOCK_LIBRARY})
 endif()
