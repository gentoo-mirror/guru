diff --git a/tools/idf.py b/tools/idf.py
index 0b91e13ff0..8ff1479f16 100755
--- a/tools/idf.py
+++ b/tools/idf.py
@@ -35,16 +35,11 @@ sys.dont_write_bytecode = True
 
 import python_version_checker  # noqa: E402
 
-try:
-    from idf_py_actions.errors import FatalError  # noqa: E402
-    from idf_py_actions.tools import (PropertyDict, executable_exists, get_target, idf_version,  # noqa: E402
+from idf_py_actions.errors import FatalError  # noqa: E402
+from idf_py_actions.tools import (PropertyDict, executable_exists, get_target, idf_version,  # noqa: E402
                                       merge_action_lists, realpath)
-    if os.getenv('IDF_COMPONENT_MANAGER') != '0':
-        from idf_component_manager import idf_extensions
-except ImportError:
-    # For example, importing click could cause this.
-    print('Please use idf.py only in an ESP-IDF shell environment.', file=sys.stderr)
-    sys.exit(1)
+if os.getenv('IDF_COMPONENT_MANAGER') != '0':
+    from idf_component_manager import idf_extensions
 
 # Use this Python interpreter for any subprocesses we launch
 PYTHON = sys.executable
diff --git a/tools/idf_tools.py b/tools/idf_tools.py
index a388bbdb5f..63aa9c3cf4 100755
--- a/tools/idf_tools.py
+++ b/tools/idf_tools.py
@@ -2039,6 +2039,7 @@ def action_install_python_env(args):  # type: ignore
 
 
 def action_check_python_dependencies(args):  # type: ignore
+    return
     use_constraints = not args.no_constraints
     req_paths = get_requirements('')  # no new features -> just detect the existing ones
 
